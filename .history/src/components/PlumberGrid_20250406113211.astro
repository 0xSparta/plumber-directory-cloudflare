---
import type { PlumberData } from '../utils/dataUtils';
import PlumberCard from './PlumberCard.astro';

interface Props {
  plumbers: PlumberData[];
  title?: string;
  subtitle?: string;
  showLocation?: boolean;
  cols?: 1 | 2 | 3 | 4;
  limit?: number;
}

const { 
  plumbers, 
  title, 
  subtitle, 
  showLocation = true, 
  cols = 3,
  limit
} = Astro.props;

const displayPlumbers = limit ? plumbers.slice(0, limit) : plumbers;

const colClasses = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4'
};
---

<div class="w-full">
  {title && <h2 class="text-2xl font-bold mb-2">{title}</h2>}
  {subtitle && <p class="text-base-content/70 mb-6">{subtitle}</p>}
  
  {displayPlumbers.length > 0 ? (
    <div class={`grid ${colClasses[cols]} gap-6`}>
      {displayPlumbers.map((plumber) => (
        <PlumberCard plumber={plumber} showLocation={showLocation} />
      ))}
    </div>
  ) : (
    <div class="alert alert-info">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
      <span>No plumbers found matching your criteria.</span>
    </div>
  )}
  
  {limit && plumbers.length > limit && (
    <div class="mt-8 text-center">
      <button class="btn btn-primary">Load More</button>
    </div>
  )}
</div> 